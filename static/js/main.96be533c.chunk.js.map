{"version":3,"sources":["context/AppContext.js","components/dropdown/InputDropdown.js","components/dropdown/Dropdown.js","components/buttonSearch/ButtonSearch.js","components/nav/Nav.js","components/card/Card.js","components/notification/Notification.js","components/result/Result.js","context/ThemeContext.js","components/button/Button.js","components/header/Header.js","components/loading/Loading.js","App.js","reportWebVitals.js","index.js"],"names":["AppContext","React","createContext","AppProvider","children","useState","input","setInput","autocomplete","setAutocomplete","search","setSearch","searchedText","setSearchedText","newListaGifs","setNewListaGifs","Provider","value","handlerInput","e","target","handlerSearch","InputDropdown","props","useContext","className","name","length","onClick","onChange","type","Dropdown","map","objeto","index","ButtonSearch","useEffect","document","getElementById","addEventListener","id","autoComplete","onKeyDown","keyCode","which","placeholder","src","alt","Nav","Card","url","Notification","notification","Result","Object","keys","pagination","count","data","images","original","ThemeContext","ThemeProvider","theme","setTheme","handlerTheme","Button","Header","Loading","KEY","process","App","fetch","then","response","json","catch","error","console","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.96be533c.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport React from \"react\";\n\nexport const AppContext = React.createContext();\n\nexport const AppProvider =({ children })=> {\n  \n  const [input, setInput] = useState(\"\")\n  const [autocomplete, setAutocomplete] = useState ([])\n  const [search, setSearch] = useState(false)\n  const [searchedText, setSearchedText] = useState(\"\")\n  const [newListaGifs, setNewListaGifs] = useState({})\n\n  const handlerInput =(e)=> setInput(e.target.value);\n  const handlerSearch =()=>{\n    setSearchedText(input)\n    setSearch(true);\n  }\n\n  return (\n    <AppContext.Provider value={{ input, setInput, handlerInput, autocomplete, setAutocomplete, search, setSearch, handlerSearch,searchedText, setSearchedText, newListaGifs, setNewListaGifs }}>\n      {children}\n    </AppContext.Provider>\n  );\n}","import React from 'react'\nimport './Dropdown.css';\nimport { AppContext } from '../../context/AppContext';\n\nexport const InputDropdown =(props)=>{\n    const { setInput, setSearch, setSearchedText } = React.useContext(AppContext);\n\n    const handlerUpdateInput =(e)=>{\n        setInput(props.name)\n        setSearchedText(props.name)\n        setSearch(true);\n    }\n\n    return(  \n        <input \n            className={props.name.length > 0 ? \"autocomplete-items input-search\" : \"no-autocomplete\"} \n            value={props.name}\n            onClick={handlerUpdateInput}\n            onChange={() => {}}\n            type=\"text\" \n        />\n    )\n}","import React from 'react'\nimport './Dropdown.css';\nimport { InputDropdown } from './InputDropdown';\nimport { AppContext } from '../../context/AppContext'; \n\nexport const Dropdown =()=>{\n    const { autocomplete } = React.useContext(AppContext);\n\n    return(\n        <div className=\"autocomplete\">\n            {\n                autocomplete.length > 0 ?\n                    autocomplete.map((objeto, index)=>{\n                    return <InputDropdown \n                            key={index} \n                            name={objeto.name}\n                            />}) : null\n            }\n        </div>\n    )\n}","import React from 'react'\nimport './ButtonSearch.css';\nimport { Dropdown } from '../dropdown/Dropdown'\nimport { useEffect } from 'react';\nimport { AppContext } from '../../context/AppContext';\n\n\nexport const ButtonSearch =()=>{\n    const { input, handlerInput, autocomplete, setAutocomplete, handlerSearch } = React.useContext(AppContext);\n\n    useEffect(()=>{\n        const cleanInput =()=> setAutocomplete([])\n        document.getElementById(\"searchbox\").addEventListener(\"search\", cleanInput);\n    }, [setAutocomplete])\n    \n    const enterSearch =(e)=> {\n        if(e.keyCode === 13 || e.which === 13){\n            handlerSearch()\n        }\n    } \n\n    return (\n        <div className= {autocomplete.length > 0 ? \"search-open flex-row\" : \"search-close flex-row\"}>\n            <div className=\"container-searched\">\n                <input \n                    id=\"searchbox\"\n                    autoComplete=\"off\" \n                    value={input} \n                    onChange={handlerInput} \n                    onKeyDown={enterSearch}\n                    className=\"input-search first-input\" \n                    type=\"search\" \n                    placeholder=\"Busca gifs\"\n                />\n                <Dropdown /> \n            </div>\n            <button className={autocomplete.length > 0 ? \"btn-search btn-open\" : \"btn-search\"} onClick={handlerSearch}>\n                <img className=\"center icon-search\" src=\"./images/icon-search-mod-noc.svg\" alt=\"icono\" />\n            </button>\n        </div>  \n    )\n}\n\n\n","import './Nav.css';\nimport { ButtonSearch } from '../buttonSearch/ButtonSearch';\n\n\nexport const Nav =()=>{\n    return (\n        <nav className=\"nav center flex-column\">\n            <h1 className=\"principal-title violet-text\">Â¡Inspirate y busca los mejores GIFS!</h1>\n            <img className=\"center\" src=\"./images/ilustra_header.svg\" alt=\"people\" />\n            <ButtonSearch />\n        </nav>\n    )\n}","import './Card.css';\n\nexport const Card =(props)=>{\n    return(\n        <img className=\"card\" src={props.url} alt=\"gif\"></img>\n    )\n}","import './Notification.css';\n\nexport const Notification =(props)=>{\n    return(\n        <div className=\"notification\">\n            <p className=\"violet-text\">{props.notification}</p>\n        </div>\n    )\n}","import React from 'react'\nimport './Result.css';\nimport { Card } from '../card/Card';\nimport { Notification } from '../notification/Notification';\nimport { AppContext } from \"../../context/AppContext\";\n\n\nexport const Result =()=>{\n    const { searchedText, newListaGifs } = React.useContext(AppContext);\n\n    return(\n        <section className=\"section center flex-column\">\n            <h3 className=\"violet-text secundary-title\">\n                {Object.keys(newListaGifs).length > 0 ? `Resultados de la bÃºsqueda: ${searchedText}` : null}\n            </h3>\n            <div className=\"cards-container flex-row\">\n                {\n                    Object.keys(newListaGifs).length > 0 ?\n                        newListaGifs.pagination.count === 0 ?\n                            <Notification notification={\"No se encontraron gifs con la categorÃ­a introducida\"}/> :\n                        \n                            newListaGifs.data.map ((objeto)=>{\n                                return(\n                                    <Card\n                                        key={objeto.id}\n                                        url={objeto.images.original.url}\n                                    />\n                                )\n                            }) \n                    : <Notification notification={\"Por favor realizar una bÃºsqueda\"}/>\n                }\n            </div>\n        </section>\n    )\n}","import { useState } from \"react\";\nimport React from \"react\";\n\nexport const ThemeContext = React.createContext();\n\nexport const ThemeProvider =({ children })=> {\n  \n    const [theme, setTheme] = useState('light');\n\n    const handlerTheme = () => {\n        theme === \"light\" ? setTheme(\"dark\") : setTheme(\"light\")\n     }\n\n  return (\n    <ThemeContext.Provider value={{ theme, handlerTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n}","import React from 'react'\nimport './Button.css';\nimport { ThemeContext } from \"../../context/ThemeContext\";\n\n\nexport const Button =()=>{\n    const { theme, handlerTheme } = React.useContext(ThemeContext);\n\n    return(\n        <>\n            <button className=\"btn violet-text\" value={theme} onClick={handlerTheme}>\n                MODO {theme===\"light\" ? \"DARK\" : \"LIGHT\"}\n            </button>\n        </>\n    )\n}","import React from 'react'\nimport './Header.css';\nimport { Button } from '../button/Button';\nimport { ThemeContext } from \"../../context/ThemeContext\";\n\n\nexport const Header =()=>{\n    const { theme } = React.useContext(ThemeContext);\n\n    return(\n        <header className=\"header flex-row\">\n            {\n                theme === \"light\" ? <img className=\"logo\" src=\"./images/logo-desktop.svg\" alt=\"logo\" /> :\n                    <img className=\"logo\" src=\"./images/logo-mobile-modo-noct.svg\" alt=\"logo\" /> \n            }\n            <Button />\n        </header>\n    )\n\n}","import './Loading.css'\n\nexport const Loading =()=>{\n    return(\n        <div className=\"loading center\">\n            <img className=\"img-loading\" src=\"./images/loading.svg\" alt=\"loading\"/>\n        </div>\n    )\n}","import './App.css';\nimport React, { useEffect } from 'react';\nimport { Nav } from './components/nav/Nav';\nimport { Result } from './components/result/Result';\nimport { Header } from './components/header/Header';\nimport { Loading } from './components/loading/Loading';\nimport { ThemeContext } from \"./context/ThemeContext\";\nimport { AppContext } from \"./context/AppContext\";\n\nconst KEY = process.env.REACT_APP_GIFOS_KEY\n\nfunction App() {\n  const { theme } = React.useContext(ThemeContext);\n  const { input, setInput, setAutocomplete, search, setSearch, setNewListaGifs } = React.useContext(AppContext);\n\nuseEffect (()=>{\n  if(search){\n    fetch(`https://api.giphy.com/v1/gifs/search?api_key=${KEY}&q=${input}&limit=12&offset=0&rating=g&lang=en\n    `)\n    .then((response)=> response.json())\n    .then((data)=> {\n      setNewListaGifs(data)\n      setSearch(false)\n      setInput(\"\")\n      setAutocomplete([])\n    })\n    .catch((error)=>console.log(error))\n  }\n},[search])\n\nuseEffect (()=>{\n  if(input){\n    fetch(`https://api.giphy.com/v1/gifs/search/tags?api_key=${KEY}&q=${input}&limit=4&offset=0`)\n    .then((response)=> response.json())\n    .then((data)=> setAutocomplete(data.data))\n    .catch((error)=>console.log(error))\n  }\n},[input, setAutocomplete])\n\n  return (\n    <div className={`App ${theme} center`}>\n      <div className=\"principal-container\">\n        <Header />\n        <Nav />\n        {\n          search ? <Loading /> : <Result />\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { AppProvider } from './context/AppContext';\nimport { ThemeProvider } from './context/ThemeContext';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <ThemeProvider>\n        <App />\n      </ThemeProvider>\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}